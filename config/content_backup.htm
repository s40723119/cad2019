<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>每周練習內容</h1>
<h2>week1</h2>
<p>中秋節吃月餅~~~</p>
<h2>week2</h2>
<p><br/><img alt="" height="531" src="/images/2019-11-08_02-10-25.png" width="1020"/>week2</p>
<h3>CMSiMDE</h3>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 是一套以 Python 加上 flask, bs4, lxml, mardown, pelican, flask_cors, leo 等模組所建構的網際內容管理系統.</p>
<p>flask 模組是一套網際程式框架, CMSiMDE 利用此一框架編寫網際相關的函式, 用來執行動態的內容管理系統.</p>
<p>bs4 在 CMSiMDE 擔任解析 config/content.htm 超文件檔案的工作, 根據 h1, h2 與 h3 標註, 對 content.htm 進行分頁, 因此使用者可以透過 3 個階次的內容架構進行編輯.</p>
<p>lxml 模組主要用來將 content.htm 逐一轉換為 content 目錄中的個別檔案, 也就是在 CMSiMDE 動態系統中, 點擊 generate_pages 之後, 呼叫 lxml 模組中的分頁方法, 將動態內容轉為靜態內容.</p>
<p>markdown 與 pelican 在 CMSiMDE 主要用來產生靜態網誌, 而網誌的設計與編輯則透過 Leo Editor 進行, 此外 CMSiMDE 除了網際內容管理與網誌之外, 還透過 Leo Editor 管理 reveal.js 網際簡報系統.</p>
<p>flask_cors 模組, 在 CMSiMDE 是為了配合 Dartpad 程式編寫過程, 需要跨網站擷取資料的需求而加入, 在舊版的可攜系統中若無此模組, 執行 CMSiMDE 之前必須透過</p>
<p>python -m pip install flask_cors </p>
<p>安裝.</p>
<p>CMSiMDE 可以放入 Javascript 前端程式, 進行簡單的設計運算, 例如:</p>
<p><a href="http://mde.tw/cp2019/content/Task3.html">http://mde.tw/cp2019/content/Task3.html</a> 中的猜數字遊戲.</p>
<p>也可以嵌入 STL文字格式零件, 例如:</p>
<p><a href="http://mde.tw/cad2019/content/STL.html">http://mde.tw/cad2019/content/STL.html</a></p>
<p>也可以利用前端的 Javascript 與伺服器後端的程式進行非同步設計運算或遠端控制, 例如:</p>
<p><a href="http://mde.tw/cad2019/content/Task1.html">http://mde.tw/cad2019/content/Task1.html</a> 中的網際虛擬雙輪車控制.</p>
<h2>week3</h2>
<h4>編譯步驟:</h4>
<p>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</p>
<p>git version 查驗 git 版本</p>
<p>git 2.13 版本以上, 可以使用下列 git clone <span>--recurse-submodules 取得所有子模組資料</span></p>
<p>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</p>
<p>edit Y:\tmp\solvespace\extlib\angle\CMakeLists.txt comment out line 713 and 714</p>
<p>#list(APPEND ANGLE_DEFINITIONS<br/>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")<br/>endif()</p>
<p>需要手動進行 libpng.dll.a 的編譯, 並改名為 libpng_static.a, 並放到編譯系統的 lib 目錄中:</p>
<p>cd solvespace</p>
<p>cd extlib</p>
<p>cd libpng</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release<br/>mingw32-make</p>
<p>rename libpng.dll.a to libpng_static.a and copy to Y:\msys64\mingw64\lib</p>
<p>接著回到 solvespace 原始碼目錄, 建立 build 目錄後進入 build 目錄, 執行:</p>
<p><span>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</span><br/><span>mingw32-make</span></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/NLKHNp5EhVI" width="956"></iframe></p>
<h2>week4</h2>
<p>蔡英文講了6次中華民國，韓國瑜講了11次，宇宙大導演萬歲</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="338" src="https://www.youtube.com/embed/fmYcOW6THY8" width="756"></iframe></p>
<h2>week5</h2>
<h2>week6</h2>
<p><span> </span><a href="https://drive.google.com/file/d/1FG0Bpd7pcNLdk_WWFtooMaAxItbmSfgs/view?usp=sharing">V-rep</a>使用，下載V-REP3與web_vrep2執行車輛模擬</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/jBvYvt1I2J0" width="956"></iframe></p>
<h2>week7</h2>
<h2>week8</h2>
<h2>week9</h2>
<p><span>影片必須加上期中考時段所宣布的內容浮水印後, 上傳至 Youtube 嵌入個人網誌後回報至下列回應</span></p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/W9VzIbHK-uQ" width="956"></iframe></p>
<h2>week13</h2>
<p>webots</p>
<p></p>
<p>參考資料<a href="http://mde.tw/cad2019/content/Webots.html">http://mde.tw/cad2019/content/Webots.html</a></p>
<p><span>webots:有五種程式可運用，ex:C、C++、Python、Java、MATLAB，為零組件組合軟件。</span></p>
<p><span>註解</span>:建立模型孔需有間隙(SOLVESPACE)，因轉出零件檔案(零件件數有多少，就轉多少次)，再轉入WEBOTS。</p>
<p>目前因WEBOTS還是商用化，因此檔案仍停留在1999年。</p>
<h3>webots安裝</h3>
<p>下載位置:<a href="https://drive.google.com/file/d/1MolDH7kKJt_IIBTrKalsMfNWMrqqTWdt/view?usp=sharing">Webots_2019b_rev1.7z</a></p>
<p><span>1.新增啟動器</span></p>
<p><span><img alt="" height="238" src="/images/explorer_2020-01-02_22-54-56.png" width="967"/></span></p>
<p>2.<span>執行路徑設定</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">set path_webots=%Disk%:\Webots_2019b_rev1\msys64\mingw64\bin;%Disk%:\Webots_2019b_rev1\msys64\usr\bin</pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">%path_webots%;</pre>
<p><span><img alt="" height="128" src="/images/mspaint_2020-01-02_23-08-42.png" width="1106"/></span></p>
<p></p>
<p>3.設定抓取的檔案</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">start webots.exe%*
</pre>
<p><img alt="" height="103" src="/images/mspaint_2020-01-02_23-12-08.png" width="614"/></p>
<p>4.將檔案丟入啟動器底下</p>
<p><img alt="" height="326" src="/images/mspaint_2020-01-02_23-17-19.png" width="1134"/></p>
<h2>week14</h2>
<p>Q:git clone 完之後CMSiMDE資料夾為空的</p>
<p><img alt="" height="408" src="/images/chrome_2020-01-02_23-22-25.png" width="1393"/></p>
<p>A:輸入指令，讓CMSiMDE更新到最新版</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git submodule init</pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git submodule update</pre>
<p><img alt="" height="182" src="/images/cmd_2020-01-02_23-32-32.png" width="908"/></p>
<p><br/><br/></p>
<p></p>
<h2>week15</h2>
<p>心得:陸續學了solvespace、webots、v-rep等程式，且nx也從原本的後處理認識了繪圖，跟solidworks的繪圖方始也不相同，讓我可以在後處理的同時可以一邊繪圖，但是對於solesspace、webots等軟體還需要再更加努力</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/-aszKoGwNVo" width="956"></iframe></p>
<h2>week16</h2>
<p>心得:不能只專一某些東西，而是要各方面顧到，這樣在組件的時候才不會遇到問題，像我們在進程產線流程時，只知道製成而忽略設計、模擬之類的程序，之樣不但事半功倍，還有可能有未知的錯誤。</p>
<p>week16 <iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/C0Yeo1JUziA" width="956"></iframe></p>
<h2>week17</h2>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="538" src="https://www.youtube.com/embed/-SvBKndmr80" width="956"></iframe></p>
<h2>week17.5</h2>
<p>驅動車繪製</p>
<p><img alt="" height="349" src="/images/solvespace_2020-01-10_09-21-26.png" width="483"/></p>
<p>期末影片</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="269" src="https://www.youtube.com/embed/KtZTg1dtwQE" width="478"></iframe></p>
<h1>期末報告</h1>